server.context-path=/svn
server.port=5081

logging.level.tk.mybatis=TRACE
druid.url=jdbc:mysql://10.126.3.161:3306/paasnew?useUnicode=true&characterEncoding=UTF8
druid.driver-class=com.mysql.jdbc.Driver
druid.username=root
druid.password:mysql
druid.initial-size=1
druid.min-idle=1
druid.max-active=20
druid.test-on-borrow=true
#spring.mvc.view.prefix=/templates/
#spring.mvc.view.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.request-context-attribute=request

#最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），
#以后加载hibernate时根据model类自动更新表结构，
#即使表结构改变了但表中的行仍然存在不会删除以前的行。
#要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。

spring.jpa.properties.hibernate.hbm2ddl.auto=update

#mybatis.type-aliases-package=tk.mybatis.springboot.model
#mybatis.mapper-locations=classpath:mapper/*.xml
#mapper.mappers=tk.mybatis.springboot.util.MyMapper
#mapper.not-empty=false
#mapper.identity=MYSQL
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=count=countSql
#当前中心镜像仓库地址
registry.privateRegistry_url=registry.paas
#当前中心镜像仓库端口
registry.privateRegistry_port=443
#当前中心镜像仓库用户名
registry.privateRegistry_user=admin
#当前中心镜像仓库密码
registry.privateRegistry_password=111111
registry.privateRegistry_nginx_port=5001

registry.publicRegistry_url=registryPublic.paas
registry.publicRegistry_port=444
registry.publicRegistry_nginx_port=5006
registry.publicRegistry_user=admin
registry.publicRegistry_password=111111

registry.ftpRegistry_url=10.1.108.125
registry.ftpRegistry_port=21
registry.ftpRegistry_user=admin
registry.ftpRegistry_password=111111